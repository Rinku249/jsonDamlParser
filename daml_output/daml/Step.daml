module Main where

import DA.List
import DA.Optional
import Daml.Script


template T001 
    with
        object : Text
		price : Decimal
		address : Text
		client : Party
		supplier : Party
    where
        signatory client
        observer supplier

        choice POAccept : ContractId T002
            with
				carriers : [Party]
			controller supplier
            do
                create T002 with
                    object = object
                    price = price
                    address = address
                    client = client
                    carriers = carriers
                    supplier = supplier
                    
                    

        choice POReject : ()
            controller supplier
            do
                 return ()


template T002 
    with
        object : Text
		price : Decimal
		address : Text
		client : Party
		carriers : [Party]
		supplier : Party
    where
        signatory supplier
        
        nonconsuming choice Ask_for_quotation : ContractId T003
            with
				carrier : Party
			controller supplier
            do
                create T003 with
                    object = object
                    price = price
                    address = address
                    client = client
                    carrier = carrier
                    supplier = supplier
                    
                    

        choice Select_Carrier : ContractId T005
            controller supplier
            do
                create T005 with
                    object = object
                    price = price
                    address = address
                    client = client
                    carriers = carriers
                    supplier = supplier
                    
                    

type T003Key = (Party,Party)
template T003 
    with
        object : Text
		price : Decimal
		address : Text
		client : Party
		carrier : Party
		supplier : Party
    where
        signatory supplier
        observer carrier

		key (supplier,carrier) : T003Key
        maintainer key._1 

        choice Decide_Quote : ContractId T004
            with
				fee : Decimal
				time : RelTime
			controller carrier
            do
                create T004 with
                    fee = fee
                    time = time
                    carrier = carrier
                    supplier = supplier
                    
                    

type T004Key = (Party,Party)
template T004 
    with
        fee : Decimal
		time : RelTime
		carrier : Party
		supplier : Party
    where
        signatory carrier
        observer supplier

		key (supplier,carrier) : T004Key
        maintainer key._1 


template T005 
    with
        object : Text
		price : Decimal
		address : Text
		client : Party
		carriers : [Party]
		supplier : Party
    where
        signatory supplier
        
        choice Choose_best : ContractId T006
            with
				carrier : Party
			controller supplier
            do
                create T006 with
                    object = object
                    price = price
                    address = address
                    client = client
                    carrier = carrier
                    supplier = supplier
                    
                    


template T006 
    with
        object : Text
		price : Decimal
		address : Text
		client : Party
		carrier : Party
		supplier : Party
    where
        signatory supplier
        observer carrier

setup = script do

    alice <- allocatePartyWithHint "Alice" (PartyIdHint "alice")
    hugo <- allocatePartyWithHint "Hugo" (PartyIdHint "hugo")
    bob <- allocatePartyWithHint "Bob" (PartyIdHint "bob")
    paco <- allocatePartyWithHint "Paco" (PartyIdHint "paco")
    luis <- allocatePartyWithHint "Luis" (PartyIdHint "luis")
    aliceId <- validateUserId "alice"
    bobId <- validateUserId "bob"
    hugoId <- validateUserId "hugo"
    pacoId <- validateUserId "paco"
    luisId <- validateUserId "luis"

    createUser (User aliceId (Some alice)) [CanActAs alice] 
    createUser (User bobId (Some bob)) [CanActAs bob]
    createUser (User hugoId (Some hugo)) [CanActAs hugo]
    createUser (User pacoId (Some paco)) [CanActAs paco]
    createUser (User luisId (Some luis)) [CanActAs luis]

    pure ()